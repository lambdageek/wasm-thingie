{"version":3,"sources":["../../../../usr/local/lib/node_modules/parcel/node_modules/process/browser.js","../../../../usr/local/lib/node_modules/parcel/node_modules/path-browserify/index.js","foo.js","index.ts"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","Module","_scriptDir","document","currentScript","src","undefined","__filename","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","Object","getOwnPropertyDescriptor","defineProperty","configurable","get","abort","set","moduleOverrides","key","hasOwnProperty","arguments_","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","window","importScripts","node","scriptDirectory","read_","readBinary","nodeFS","nodePath","require","dirname","__dirname","filename","binary","ret","buffer","Uint8Array","assert","replace","slice","ex","ExitStatus","status","read","f","data","readbuffer","scriptArgs","quit","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","out","bind","err","warnOnce","text","shown","tempRet0","wasmBinary","wasmMemory","setTempRet0","value","WebAssembly","ABORT","condition","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","toString","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","PAGE_SIZE","HEAP32","HEAPU32","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","STACK_BASE","STACK_MAX","INITIAL_INITIAL_MEMORY","wasmTable","writeStackCookie","checkStackCookie","cookie1","cookie2","Memory","byteLength","h16","h8","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeInitialized","runtimeExited","Math","imul","fround","clz32","trunc","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","what","stackTrace","js","jsStackTrace","stack","demangleAll","x","y","func","RuntimeError","FS","init","createDataFile","createPreloadedFile","createLazyFile","mkdev","registerDevice","analyzePath","loadFilesFromDB","ErrnoError","hasPrefix","prefix","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","createExportWrapper","fixedasm","displayName","asm","wasmBinaryFile","path","getBinary","callRuntimeCallbacks","callbacks","callback","shift","arg","emscripten_realloc_buffer","size","grow","SYSCALLS","mappings","buffers","printChar","stream","curr","varargs","getStr","get64","low","high","___wasm_call_ctors","asmLibraryArg","calledRun","___cxa_atexit","a0","a1","_abort","_emscripten_memcpy_big","dest","num","copyWithin","_emscripten_resize_heap","requestedSize","oldSize","minHeapSize","multiple","cutDown","overGrownHeapSize","min","newSize","max","replacement","_fd_write","fd","iov","iovcnt","pnum","j","_setTempRet0","$i","createWasm","info","id","receiveInstance","instance","removeRunDependency","clearInterval","setInterval","dep","trueModule","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","getBinaryPromise","fetch","then","credentials","catch","instantiate","reason","instantiateStreaming","result","message","doRun","postRun","cb","unshift","addOnPostRun","preRun","addOnPreRun","runCaller","pop","ready","define"],"mappings":"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","file":"wasm-thingie.4aa794f0.js","sourceRoot":"..","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","\nvar Module = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(Module) {\n  Module = Module || {};\n\n\n\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module !== 'undefined' ? Module : {};\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\nModule['ready'] = new Promise(function(resolve, reject) {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n\n      if (!Object.getOwnPropertyDescriptor(Module['ready'], '_initialize')) {\n        Object.defineProperty(Module['ready'], '_initialize', { configurable: true, get: function() { abort('You are getting _initialize on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n        Object.defineProperty(Module['ready'], '_initialize', { configurable: true, set: function() { abort('You are setting _initialize on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n      }\n    \n\n      if (!Object.getOwnPropertyDescriptor(Module['ready'], '_foo')) {\n        Object.defineProperty(Module['ready'], '_foo', { configurable: true, get: function() { abort('You are getting _foo on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n        Object.defineProperty(Module['ready'], '_foo', { configurable: true, set: function() { abort('You are setting _foo on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n      }\n    \n\n      if (!Object.getOwnPropertyDescriptor(Module['ready'], '_stackSave')) {\n        Object.defineProperty(Module['ready'], '_stackSave', { configurable: true, get: function() { abort('You are getting _stackSave on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n        Object.defineProperty(Module['ready'], '_stackSave', { configurable: true, set: function() { abort('You are setting _stackSave on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n      }\n    \n\n      if (!Object.getOwnPropertyDescriptor(Module['ready'], '_stackRestore')) {\n        Object.defineProperty(Module['ready'], '_stackRestore', { configurable: true, get: function() { abort('You are getting _stackRestore on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n        Object.defineProperty(Module['ready'], '_stackRestore', { configurable: true, set: function() { abort('You are setting _stackRestore on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n      }\n    \n\n      if (!Object.getOwnPropertyDescriptor(Module['ready'], '_stackAlloc')) {\n        Object.defineProperty(Module['ready'], '_stackAlloc', { configurable: true, get: function() { abort('You are getting _stackAlloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n        Object.defineProperty(Module['ready'], '_stackAlloc', { configurable: true, set: function() { abort('You are setting _stackAlloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n      }\n    \n\n      if (!Object.getOwnPropertyDescriptor(Module['ready'], '___data_end')) {\n        Object.defineProperty(Module['ready'], '___data_end', { configurable: true, get: function() { abort('You are getting ___data_end on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n        Object.defineProperty(Module['ready'], '___data_end', { configurable: true, set: function() { abort('You are setting ___data_end on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n      }\n    \n\n      if (!Object.getOwnPropertyDescriptor(Module['ready'], '___wasm_call_ctors')) {\n        Object.defineProperty(Module['ready'], '___wasm_call_ctors', { configurable: true, get: function() { abort('You are getting ___wasm_call_ctors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n        Object.defineProperty(Module['ready'], '___wasm_call_ctors', { configurable: true, set: function() { abort('You are setting ___wasm_call_ctors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n      }\n    \n\n      if (!Object.getOwnPropertyDescriptor(Module['ready'], '_fflush')) {\n        Object.defineProperty(Module['ready'], '_fflush', { configurable: true, get: function() { abort('You are getting _fflush on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n        Object.defineProperty(Module['ready'], '_fflush', { configurable: true, set: function() { abort('You are setting _fflush on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n      }\n    \n\n      if (!Object.getOwnPropertyDescriptor(Module['ready'], '___errno_location')) {\n        Object.defineProperty(Module['ready'], '___errno_location', { configurable: true, get: function() { abort('You are getting ___errno_location on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n        Object.defineProperty(Module['ready'], '___errno_location', { configurable: true, set: function() { abort('You are setting ___errno_location on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n      }\n    \n\n      if (!Object.getOwnPropertyDescriptor(Module['ready'], 'onRuntimeInitialized')) {\n        Object.defineProperty(Module['ready'], 'onRuntimeInitialized', { configurable: true, get: function() { abort('You are getting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n        Object.defineProperty(Module['ready'], 'onRuntimeInitialized', { configurable: true, set: function() { abort('You are setting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\n      }\n    \n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// {{PRE_JSES}}\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = {};\nvar key;\nfor (key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = function(status, toThrow) {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = false;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\nENVIRONMENT_IS_WEB = typeof window === 'object';\nENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nENVIRONMENT_IS_NODE = typeof process === 'object' && typeof process.versions === 'object' && typeof process.versions.node === 'string';\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\nvar nodeFS;\nvar nodePath;\n\nif (ENVIRONMENT_IS_NODE) {\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = require('path').dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n// include: node_shell_read.js\n\n\nread_ = function shell_read(filename, binary) {\n  if (!nodeFS) nodeFS = require('fs');\n  if (!nodePath) nodePath = require('path');\n  filename = nodePath['normalize'](filename);\n  return nodeFS['readFileSync'](filename, binary ? null : 'utf8');\n};\n\nreadBinary = function readBinary(filename) {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n    ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n};\n\n// end include: node_shell_read.js\n  if (process['argv'].length > 1) {\n    thisProgram = process['argv'][1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process['argv'].slice(2);\n\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  process['on']('unhandledRejection', abort);\n\n  quit_ = function(status) {\n    process['exit'](status);\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  readBinary = function readBinary(f) {\n    var data;\n    if (typeof readbuffer === 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data === 'object');\n    return data;\n  };\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit === 'function') {\n    quit_ = function(status) {\n      quit(status);\n    };\n  }\n\n  if (typeof print !== 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console === 'undefined') console = /** @type{!Console} */({});\n    console.log = /** @type{!function(this:Console, ...*): undefined} */ (print);\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ (typeof printErr !== 'undefined' ? printErr : print);\n  }\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document !== 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n\n// include: web_or_worker_shell_read.js\n\n\n  read_ = function shell_read(url) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  };\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = function readBinary(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = function readAsync(url, onload, onerror) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function xhr_onload() {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  };\n\n// end include: web_or_worker_shell_read.js\n  }\n\n  setWindowTitle = function(title) { document.title = title };\n} else\n{\n  throw new Error('environment detection error');\n}\n\n// Set up the out() and err() hooks, which are how we can print to stdout or\n// stderr, respectively.\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nfor (key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\nif (Module['arguments']) arguments_ = Module['arguments'];if (!Object.getOwnPropertyDescriptor(Module, 'arguments')) Object.defineProperty(Module, 'arguments', { configurable: true, get: function() { abort('Module.arguments has been replaced with plain arguments_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)') } });\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];if (!Object.getOwnPropertyDescriptor(Module, 'thisProgram')) Object.defineProperty(Module, 'thisProgram', { configurable: true, get: function() { abort('Module.thisProgram has been replaced with plain thisProgram (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)') } });\nif (Module['quit']) quit_ = Module['quit'];if (!Object.getOwnPropertyDescriptor(Module, 'quit')) Object.defineProperty(Module, 'quit', { configurable: true, get: function() { abort('Module.quit has been replaced with plain quit_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)') } });\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] === 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] === 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] === 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] === 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] === 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] === 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] === 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] === 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nassert(typeof Module['TOTAL_MEMORY'] === 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nif (!Object.getOwnPropertyDescriptor(Module, 'read')) Object.defineProperty(Module, 'read', { configurable: true, get: function() { abort('Module.read has been replaced with plain read_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)') } });\nif (!Object.getOwnPropertyDescriptor(Module, 'readAsync')) Object.defineProperty(Module, 'readAsync', { configurable: true, get: function() { abort('Module.readAsync has been replaced with plain readAsync (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)') } });\nif (!Object.getOwnPropertyDescriptor(Module, 'readBinary')) Object.defineProperty(Module, 'readBinary', { configurable: true, get: function() { abort('Module.readBinary has been replaced with plain readBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)') } });\nif (!Object.getOwnPropertyDescriptor(Module, 'setWindowTitle')) Object.defineProperty(Module, 'setWindowTitle', { configurable: true, get: function() { abort('Module.setWindowTitle has been replaced with plain setWindowTitle (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)') } });\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n\n\n\n\nvar STACK_ALIGN = 16;\n\nfunction alignMemory(size, factor) {\n  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default\n  return Math.ceil(size / factor) * factor;\n}\n\nfunction getNativeTypeSize(type) {\n  switch (type) {\n    case 'i1': case 'i8': return 1;\n    case 'i16': return 2;\n    case 'i32': return 4;\n    case 'i64': return 8;\n    case 'float': return 4;\n    case 'double': return 8;\n    default: {\n      if (type[type.length-1] === '*') {\n        return 4; // A pointer\n      } else if (type[0] === 'i') {\n        var bits = Number(type.substr(1));\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\n        return bits / 8;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n\nfunction warnOnce(text) {\n  if (!warnOnce.shown) warnOnce.shown = {};\n  if (!warnOnce.shown[text]) {\n    warnOnce.shown[text] = 1;\n    err(text);\n  }\n}\n\n// include: runtime_functions.js\n\n\n// Wraps a JS function as a wasm function with a given signature.\nfunction convertJsFunctionToWasm(func, sig) {\n\n  // If the type reflection proposal is available, use the new\n  // \"WebAssembly.Function\" constructor.\n  // Otherwise, construct a minimal wasm module importing the JS function and\n  // re-exporting it.\n  if (typeof WebAssembly.Function === \"function\") {\n    var typeNames = {\n      'i': 'i32',\n      'j': 'i64',\n      'f': 'f32',\n      'd': 'f64'\n    };\n    var type = {\n      parameters: [],\n      results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\n    };\n    for (var i = 1; i < sig.length; ++i) {\n      type.parameters.push(typeNames[sig[i]]);\n    }\n    return new WebAssembly.Function(type, func);\n  }\n\n  // The module is static, with the exception of the type section, which is\n  // generated based on the signature passed in.\n  var typeSection = [\n    0x01, // id: section,\n    0x00, // length: 0 (placeholder)\n    0x01, // count: 1\n    0x60, // form: func\n  ];\n  var sigRet = sig.slice(0, 1);\n  var sigParam = sig.slice(1);\n  var typeCodes = {\n    'i': 0x7f, // i32\n    'j': 0x7e, // i64\n    'f': 0x7d, // f32\n    'd': 0x7c, // f64\n  };\n\n  // Parameters, length + signatures\n  typeSection.push(sigParam.length);\n  for (var i = 0; i < sigParam.length; ++i) {\n    typeSection.push(typeCodes[sigParam[i]]);\n  }\n\n  // Return values, length + signatures\n  // With no multi-return in MVP, either 0 (void) or 1 (anything else)\n  if (sigRet == 'v') {\n    typeSection.push(0x00);\n  } else {\n    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);\n  }\n\n  // Write the overall length of the type section back into the section header\n  // (excepting the 2 bytes for the section id and length)\n  typeSection[1] = typeSection.length - 2;\n\n  // Rest of the module is static\n  var bytes = new Uint8Array([\n    0x00, 0x61, 0x73, 0x6d, // magic (\"\\0asm\")\n    0x01, 0x00, 0x00, 0x00, // version: 1\n  ].concat(typeSection, [\n    0x02, 0x07, // import section\n      // (import \"e\" \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,\n    0x07, 0x05, // export section\n      // (export \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x66, 0x00, 0x00,\n  ]));\n\n   // We can compile this wasm module synchronously because it is very small.\n  // This accepts an import (at \"e.f\"), that it reroutes to an export (at \"f\")\n  var module = new WebAssembly.Module(bytes);\n  var instance = new WebAssembly.Instance(module, {\n    'e': {\n      'f': func\n    }\n  });\n  var wrappedFunc = instance.exports['f'];\n  return wrappedFunc;\n}\n\nvar freeTableIndexes = [];\n\n// Weak map of functions in the table to their indexes, created on first use.\nvar functionsInTableMap;\n\nfunction getEmptyTableSlot() {\n  // Reuse a free index if there is one, otherwise grow.\n  if (freeTableIndexes.length) {\n    return freeTableIndexes.pop();\n  }\n  // Grow the table\n  try {\n    wasmTable.grow(1);\n  } catch (err) {\n    if (!(err instanceof RangeError)) {\n      throw err;\n    }\n    throw 'Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.';\n  }\n  return wasmTable.length - 1;\n}\n\n// Add a wasm function to the table.\nfunction addFunctionWasm(func, sig) {\n  // Check if the function is already in the table, to ensure each function\n  // gets a unique index. First, create the map if this is the first use.\n  if (!functionsInTableMap) {\n    functionsInTableMap = new WeakMap();\n    for (var i = 0; i < wasmTable.length; i++) {\n      var item = wasmTable.get(i);\n      // Ignore null values.\n      if (item) {\n        functionsInTableMap.set(item, i);\n      }\n    }\n  }\n  if (functionsInTableMap.has(func)) {\n    return functionsInTableMap.get(func);\n  }\n\n  // It's not in the table, add it now.\n\n  var ret = getEmptyTableSlot();\n\n  // Set the new value.\n  try {\n    // Attempting to call this with JS function will cause of table.set() to fail\n    wasmTable.set(ret, func);\n  } catch (err) {\n    if (!(err instanceof TypeError)) {\n      throw err;\n    }\n    assert(typeof sig !== 'undefined', 'Missing signature argument to addFunction: ' + func);\n    var wrapped = convertJsFunctionToWasm(func, sig);\n    wasmTable.set(ret, wrapped);\n  }\n\n  functionsInTableMap.set(func, ret);\n\n  return ret;\n}\n\nfunction removeFunction(index) {\n  functionsInTableMap.delete(wasmTable.get(index));\n  freeTableIndexes.push(index);\n}\n\n// 'sig' parameter is required for the llvm backend but only when func is not\n// already a WebAssembly function.\nfunction addFunction(func, sig) {\n  assert(typeof func !== 'undefined');\n\n  return addFunctionWasm(func, sig);\n}\n\n// end include: runtime_functions.js\n// include: runtime_debug.js\n\n\n// end include: runtime_debug.js\nfunction makeBigInt(low, high, unsigned) {\n  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));\n}\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = function(value) {\n  tempRet0 = value;\n};\n\nvar getTempRet0 = function() {\n  return tempRet0;\n};\n\nfunction getCompilerSetting(name) {\n  throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work';\n}\n\n\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];if (!Object.getOwnPropertyDescriptor(Module, 'wasmBinary')) Object.defineProperty(Module, 'wasmBinary', { configurable: true, get: function() { abort('Module.wasmBinary has been replaced with plain wasmBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)') } });\nvar noExitRuntime;if (Module['noExitRuntime']) noExitRuntime = Module['noExitRuntime'];if (!Object.getOwnPropertyDescriptor(Module, 'noExitRuntime')) Object.defineProperty(Module, 'noExitRuntime', { configurable: true, get: function() { abort('Module.noExitRuntime has been replaced with plain noExitRuntime (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)') } });\n\nif (typeof WebAssembly !== 'object') {\n  abort('no native wasm support detected');\n}\n\n// include: runtime_safe_heap.js\n\n\n// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.\n// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)\n\n/** @param {number} ptr\n    @param {number} value\n    @param {string} type\n    @param {number|boolean=} noSafe */\nfunction setValue(ptr, value, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n}\n\n/** @param {number} ptr\n    @param {string} type\n    @param {number|boolean=} noSafe */\nfunction getValue(ptr, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  return null;\n}\n\n// end include: runtime_safe_heap.js\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS = 0;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed: ' + text);\n  }\n}\n\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n  return func;\n}\n\n// C calling interface.\n/** @param {string|null=} returnType\n    @param {Array=} argTypes\n    @param {Arguments|Array=} args\n    @param {Object=} opts */\nfunction ccall(ident, returnType, argTypes, args, opts) {\n  // For fast lookup of conversion functions\n  var toC = {\n    'string': function(str) {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) { // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        var len = (str.length << 2) + 1;\n        ret = stackAlloc(len);\n        stringToUTF8(str, ret, len);\n      }\n      return ret;\n    },\n    'array': function(arr) {\n      var ret = stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    }\n  };\n\n  function convertReturnValue(ret) {\n    if (returnType === 'string') return UTF8ToString(ret);\n    if (returnType === 'boolean') return Boolean(ret);\n    return ret;\n  }\n\n  var func = getCFunc(ident);\n  var cArgs = [];\n  var stack = 0;\n  assert(returnType !== 'array', 'Return type should not be \"array\".');\n  if (args) {\n    for (var i = 0; i < args.length; i++) {\n      var converter = toC[argTypes[i]];\n      if (converter) {\n        if (stack === 0) stack = stackSave();\n        cArgs[i] = converter(args[i]);\n      } else {\n        cArgs[i] = args[i];\n      }\n    }\n  }\n  var ret = func.apply(null, cArgs);\n\n  ret = convertReturnValue(ret);\n  if (stack !== 0) stackRestore(stack);\n  return ret;\n}\n\n/** @param {string=} returnType\n    @param {Array=} argTypes\n    @param {Object=} opts */\nfunction cwrap(ident, returnType, argTypes, opts) {\n  return function() {\n    return ccall(ident, returnType, argTypes, arguments, opts);\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\nfunction _malloc() {\n  abort(\"malloc() called but not included in the build - add '_malloc' to EXPORTED_FUNCTIONS\");\n}\nfunction _free() {\n  // Show a helpful error since we used to include free by default in the past.\n  abort(\"free() called but not included in the build - add '_free' to EXPORTED_FUNCTIONS\");\n}\n\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\n\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\n//             is a little tricky (see docs right below). The reason is that it is optimized\n//             for multiple syntaxes to save space in generated code. So you should\n//             normally not use allocate(), and instead allocate memory using _malloc(),\n//             initialize it with setValue(), and so forth.\n// @slab: An array of data.\n// @allocator: How to allocate memory, see ALLOC_*\n/** @type {function((Uint8Array|Array<number>), number)} */\nfunction allocate(slab, allocator) {\n  var ret;\n  assert(typeof allocator === 'number', 'allocate no longer takes a type argument')\n  assert(typeof slab !== 'number', 'allocate no longer takes a number as arg0')\n\n  if (allocator == ALLOC_STACK) {\n    ret = stackAlloc(slab.length);\n  } else {\n    ret = abort('malloc was not included, but is needed in allocate. Adding \"_malloc\" to EXPORTED_FUNCTIONS should fix that. This may be a bug in the compiler, please file an issue.');;\n  }\n\n  if (slab.subarray || slab.slice) {\n    HEAPU8.set(/** @type {!Uint8Array} */(slab), ret);\n  } else {\n    HEAPU8.set(new Uint8Array(slab), ret);\n  }\n  return ret;\n}\n\n// include: runtime_strings.js\n\n\n// runtime_strings.js: Strings related runtime functions that are part of both MINIMAL_RUNTIME and regular runtime.\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(heap, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)\n  while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n  if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n    return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n  } else {\n    var str = '';\n    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that\n    while (idx < endPtr) {\n      // For UTF8 byte structure, see:\n      // http://en.wikipedia.org/wiki/UTF-8#Description\n      // https://www.ietf.org/rfc/rfc2279.txt\n      // https://tools.ietf.org/html/rfc3629\n      var u0 = heap[idx++];\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n      var u1 = heap[idx++] & 63;\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n      var u2 = heap[idx++] & 63;\n      if ((u0 & 0xF0) == 0xE0) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte 0x' + u0.toString(16) + ' encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!');\n        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heap[idx++] & 63);\n      }\n\n      if (u0 < 0x10000) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 0x10000;\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n      }\n    }\n  }\n  return str;\n}\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a\n// copy of that string as a Javascript String object.\n// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit\n//                 this parameter to scan the string until the first \\0 byte. If maxBytesToRead is\n//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the\n//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will\n//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)\n//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may\n//                 throw JS JIT optimizations off, so it is worth to consider consistently using one\n//                 style or the other.\n/**\n * @param {number} ptr\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   heap: the array to copy to. Each index in this array is assumed to be one 8-byte element.\n//   outIdx: The starting offset in the array to begin the copying.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array.\n//                    This count should include the null terminator,\n//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      heap[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      heap[outIdx++] = 0xC0 | (u >> 6);\n      heap[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      heap[outIdx++] = 0xE0 | (u >> 12);\n      heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n      heap[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      if (u >= 0x200000) warnOnce('Invalid Unicode code point 0x' + u.toString(16) + ' encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).');\n      heap[outIdx++] = 0xF0 | (u >> 18);\n      heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n      heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n      heap[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  heap[outIdx] = 0;\n  return outIdx - startIdx;\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) ++len;\n    else if (u <= 0x7FF) len += 2;\n    else if (u <= 0xFFFF) len += 3;\n    else len += 4;\n  }\n  return len;\n}\n\n// end include: runtime_strings.js\n// include: runtime_strings_extra.js\n\n\n// runtime_strings_extra.js: Strings related runtime functions that are available only in regular runtime.\n\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction AsciiToString(ptr) {\n  var str = '';\n  while (1) {\n    var ch = HEAPU8[((ptr++)>>0)];\n    if (!ch) return str;\n    str += String.fromCharCode(ch);\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\n\nfunction stringToAscii(str, outPtr) {\n  return writeAsciiToMemory(str, outPtr, false);\n}\n\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  var maxIdx = idx + maxBytesToRead / 2;\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n  // will always evaluate to true. This saves on code size.\n  while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n  endPtr = idx << 1;\n\n  if (endPtr - ptr > 32 && UTF16Decoder) {\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  } else {\n    var i = 0;\n\n    var str = '';\n    while (1) {\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n      if (codeUnit == 0 || i == maxBytesToRead / 2) return str;\n      ++i;\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\n      str += String.fromCharCode(codeUnit);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[((outPtr)>>1)]=codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[((outPtr)>>1)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF16(str) {\n  return str.length*2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n  var i = 0;\n\n  var str = '';\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n  // will always evaluate to true. This saves on code size.\n  while (!(i >= maxBytesToRead / 4)) {\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n    if (utf32 == 0) break;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n  return str;\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n    }\n    HEAP32[((outPtr)>>2)]=codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[((outPtr)>>2)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n\n  return len;\n}\n\n// Allocate heap space for a JS string, and write it there.\n// It is the responsibility of the caller to free() that memory.\nfunction allocateUTF8(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = abort('malloc was not included, but is needed in allocateUTF8. Adding \"_malloc\" to EXPORTED_FUNCTIONS should fix that. This may be a bug in the compiler, please file an issue.');;\n  if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Allocate stack space for a JS string, and write it there.\nfunction allocateUTF8OnStack(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Deprecated: This function should not be called because it is unsafe and does not provide\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\n// to be secure from out of bounds writes.\n/** @deprecated\n    @param {boolean=} dontAddNull */\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\n\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\n  if (dontAddNull) {\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\n    // character that existed at the location where the null will be placed, and restore\n    // that after the write (below).\n    end = buffer + lengthBytesUTF8(string);\n    lastChar = HEAP8[end];\n  }\n  stringToUTF8(string, buffer, Infinity);\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\n}\n\nfunction writeArrayToMemory(array, buffer) {\n  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n  HEAP8.set(array, buffer);\n}\n\n/** @param {boolean=} dontAddNull */\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n  for (var i = 0; i < str.length; ++i) {\n    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\n  }\n  // Null-terminate the pointer to the HEAP.\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\n}\n\n// end include: runtime_strings_extra.js\n// Memory management\n\nvar PAGE_SIZE = 16384;\nvar WASM_PAGE_SIZE = 65536;\n\nfunction alignUp(x, multiple) {\n  if (x % multiple > 0) {\n    x += multiple - (x % multiple);\n  }\n  return x;\n}\n\nvar HEAP,\n/** @type {ArrayBuffer} */\n  buffer,\n/** @type {Int8Array} */\n  HEAP8,\n/** @type {Uint8Array} */\n  HEAPU8,\n/** @type {Int16Array} */\n  HEAP16,\n/** @type {Uint16Array} */\n  HEAPU16,\n/** @type {Int32Array} */\n  HEAP32,\n/** @type {Uint32Array} */\n  HEAPU32,\n/** @type {Float32Array} */\n  HEAPF32,\n/** @type {Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n  buffer = buf;\n  Module['HEAP8'] = HEAP8 = new Int8Array(buf);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buf);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buf);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);\n}\n\nvar STACK_BASE = 5246496,\n    STACKTOP = STACK_BASE,\n    STACK_MAX = 3616;\n\nassert(STACK_BASE % 16 === 0, 'stack must start aligned');\n\nvar TOTAL_STACK = 5242880;\nif (Module['TOTAL_STACK']) assert(TOTAL_STACK === Module['TOTAL_STACK'], 'the stack size can no longer be determined at runtime')\n\nvar INITIAL_INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 5898240;if (!Object.getOwnPropertyDescriptor(Module, 'INITIAL_MEMORY')) Object.defineProperty(Module, 'INITIAL_MEMORY', { configurable: true, get: function() { abort('Module.INITIAL_MEMORY has been replaced with plain INITIAL_INITIAL_MEMORY (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)') } });\n\nassert(INITIAL_INITIAL_MEMORY >= TOTAL_STACK, 'INITIAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_INITIAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');\n\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\nassert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,\n       'JS engine does not provide full typed array support');\n\n// In non-standalone/normal mode, we create the memory here.\n// include: runtime_init_memory.js\n\n\n// Create the main memory. (Note: this isn't used in STANDALONE_WASM mode since the wasm\n// memory is created in the wasm, not in JS.)\n\n  if (Module['wasmMemory']) {\n    wasmMemory = Module['wasmMemory'];\n  } else\n  {\n    wasmMemory = new WebAssembly.Memory({\n      'initial': INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE\n      ,\n      'maximum': 2147483648 / WASM_PAGE_SIZE\n    });\n  }\n\nif (wasmMemory) {\n  buffer = wasmMemory.buffer;\n}\n\n// If the user provides an incorrect length, just use that length instead rather than providing the user to\n// specifically provide the memory length with Module['INITIAL_MEMORY'].\nINITIAL_INITIAL_MEMORY = buffer.byteLength;\nassert(INITIAL_INITIAL_MEMORY % WASM_PAGE_SIZE === 0);\nassert(65536 % WASM_PAGE_SIZE === 0);\nupdateGlobalBufferAndViews(buffer);\n\n// end include: runtime_init_memory.js\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n\n\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  assert((STACK_MAX & 3) == 0);\n  // The stack grows downwards\n  HEAPU32[(STACK_MAX >> 2)+1] = 0x2135467;\n  HEAPU32[(STACK_MAX >> 2)+2] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAP32[0] = 0x63736d65; /* 'emsc' */\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var cookie1 = HEAPU32[(STACK_MAX >> 2)+1];\n  var cookie2 = HEAPU32[(STACK_MAX >> 2)+2];\n  if (cookie1 != 0x2135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x' + cookie2.toString(16) + ' ' + cookie1.toString(16));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n}\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n\n\n// Endianness check (note: assumes compiler arch was little-endian)\n(function() {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';\n})();\n\nfunction abortFnPtrError(ptr, sig) {\n\tabort(\"Invalid function pointer \" + ptr + \" called with signature '\" + sig + \"'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this). Build with ASSERTIONS=2 for more info.\");\n}\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\nvar runtimeExited = false;\n\nfunction preRun() {\n\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  checkStackCookie();\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  checkStackCookie();\n  \n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  checkStackCookie();\n  runtimeExited = true;\n}\n\nfunction postRun() {\n  checkStackCookie();\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\nModule[\"preloadedImages\"] = {}; // maps url to image data\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what += '';\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  var output = 'abort(' + what + ') at ' + stackTrace();\n  what = output;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  var e = new WebAssembly.RuntimeError(what);\n\n  readyPromiseReject(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// {{MEM_INITIALIZER}}\n\n// include: memoryprofiler.js\n\n\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');\n  },\n  init: function() { FS.error() },\n  createDataFile: function() { FS.error() },\n  createPreloadedFile: function() { FS.error() },\n  createLazyFile: function() { FS.error() },\n  open: function() { FS.error() },\n  mkdev: function() { FS.error() },\n  registerDevice: function() { FS.error() },\n  analyzePath: function() { FS.error() },\n  loadFilesFromDB: function() { FS.error() },\n\n  ErrnoError: function ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n\n\nfunction hasPrefix(str, prefix) {\n  return String.prototype.startsWith ?\n      str.startsWith(prefix) :\n      str.indexOf(prefix) === 0;\n}\n\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  return hasPrefix(filename, dataURIPrefix);\n}\n\nvar fileURIPrefix = \"file://\";\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return hasPrefix(filename, fileURIPrefix);\n}\n\n// end include: URIUtils.js\nfunction createExportWrapper(name, fixedasm) {\n  return function() {\n    var displayName = name;\n    var asm = fixedasm;\n    if (!fixedasm) {\n      asm = Module['asm'];\n    }\n    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\n    assert(!runtimeExited, 'native function `' + displayName + '` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n    if (!asm[name]) {\n      assert(asm[name], 'exported native function `' + displayName + '` not found');\n    }\n    return asm[name].apply(null, arguments);\n  };\n}\n\nvar wasmBinaryFile = 'foo.wasm';\nif (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary() {\n  try {\n    if (wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n\n    if (readBinary) {\n      return readBinary(wasmBinaryFile);\n    } else {\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise() {\n  // If we don't have the binary yet, and have the Fetch api, use that;\n  // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function'\n      // Let's not use fetch to get objects over file:// as it's most likely Cordova which doesn't support fetch for file://\n      && !isFileURI(wasmBinaryFile)\n      ) {\n    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n      if (!response['ok']) {\n        throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n      }\n      return response['arrayBuffer']();\n    }).catch(function () {\n      return getBinary();\n    });\n  }\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(getBinary);\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': asmLibraryArg,\n    'wasi_snapshot_preview1': asmLibraryArg\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n\n    Module['asm'] = exports;\n\n    wasmTable = Module['asm']['__indirect_function_table'];\n    assert(wasmTable, \"table not found in wasm exports\");\n\n    removeRunDependency('wasm-instantiate');\n  }\n  // we can't run yet (except in a pthread, where we have a custom sync instantiator)\n  addRunDependency('wasm-instantiate');\n\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiatedSource(output) {\n    // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\n    receiveInstance(output['instance']);\n  }\n\n  function instantiateArrayBuffer(receiver) {\n    return getBinaryPromise().then(function(binary) {\n      return WebAssembly.instantiate(binary, info);\n    }).then(receiver, function(reason) {\n      err('failed to asynchronously prepare wasm: ' + reason);\n\n      abort(reason);\n    });\n  }\n\n  // Prefer streaming instantiation if available.\n  function instantiateAsync() {\n    if (!wasmBinary &&\n        typeof WebAssembly.instantiateStreaming === 'function' &&\n        !isDataURI(wasmBinaryFile) &&\n        // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n        !isFileURI(wasmBinaryFile) &&\n        typeof fetch === 'function') {\n      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\n        var result = WebAssembly.instantiateStreaming(response, info);\n        return result.then(receiveInstantiatedSource, function(reason) {\n            // We expect the most common failure cause to be a bad MIME type for the binary,\n            // in which case falling back to ArrayBuffer instantiation should work.\n            err('wasm streaming compile failed: ' + reason);\n            err('falling back to ArrayBuffer instantiation');\n            return instantiateArrayBuffer(receiveInstantiatedSource);\n          });\n      });\n    } else {\n      return instantiateArrayBuffer(receiveInstantiatedSource);\n    }\n  }\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\n  // to any other async startup actions they are performing.\n  if (Module['instantiateWasm']) {\n    try {\n      var exports = Module['instantiateWasm'](info, receiveInstance);\n      return exports;\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n\n  // If instantiation fails, reject the module ready promise.\n  instantiateAsync().catch(readyPromiseReject);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions\nvar tempDouble;\nvar tempI64;\n\n// === Body ===\n\nvar ASM_CONSTS = {\n  \n};\n\n\n\n\n\n\n  function abortStackOverflow(allocSize) {\n      abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - stackSave() + allocSize) + ' bytes available!');\n    }\n\n  function callRuntimeCallbacks(callbacks) {\n      while(callbacks.length > 0) {\n        var callback = callbacks.shift();\n        if (typeof callback == 'function') {\n          callback(Module); // Pass the module as the first argument.\n          continue;\n        }\n        var func = callback.func;\n        if (typeof func === 'number') {\n          if (callback.arg === undefined) {\n            wasmTable.get(func)();\n          } else {\n            wasmTable.get(func)(callback.arg);\n          }\n        } else {\n          func(callback.arg === undefined ? null : callback.arg);\n        }\n      }\n    }\n\n  function demangle(func) {\n      warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');\n      return func;\n    }\n\n  function demangleAll(text) {\n      var regex =\n        /\\b_Z[\\w\\d_]+/g;\n      return text.replace(regex,\n        function(x) {\n          var y = demangle(x);\n          return x === y ? x : (y + ' [' + x + ']');\n        });\n    }\n\n  function dynCallLegacy(sig, ptr, args) {\n      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n      if (args && args.length) {\n        // j (64-bit integer) must be passed in as two numbers [low 32, high 32].\n        assert(args.length === sig.substring(1).replace(/j/g, '--').length);\n      } else {\n        assert(sig.length == 1);\n      }\n      if (args && args.length) {\n        return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\n      }\n      return Module['dynCall_' + sig].call(null, ptr);\n    }\n  function dynCall(sig, ptr, args) {\n      // Without WASM_BIGINT support we cannot directly call function with i64 as\n      // part of thier signature, so we rely the dynCall functions generated by\n      // wasm-emscripten-finalize\n      if (sig.indexOf('j') != -1) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      assert(wasmTable.get(ptr), 'missing table entry in dynCall: ' + ptr);\n      return wasmTable.get(ptr).apply(null, args)\n    }\n\n  function jsStackTrace() {\n      var error = new Error();\n      if (!error.stack) {\n        // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\n        // so try that as a special-case.\n        try {\n          throw new Error();\n        } catch(e) {\n          error = e;\n        }\n        if (!error.stack) {\n          return '(no stack trace available)';\n        }\n      }\n      return error.stack.toString();\n    }\n\n  function stackTrace() {\n      var js = jsStackTrace();\n      if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\n      return demangleAll(js);\n    }\n\n  function _atexit(func, arg) {\n    }\n  function ___cxa_atexit(a0,a1\n  ) {\n  return _atexit(a0,a1);\n  }\n\n  function _abort() {\n      abort();\n    }\n\n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n\n  function _emscripten_get_heap_size() {\n      return HEAPU8.length;\n    }\n  \n  function emscripten_realloc_buffer(size) {\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow((size - buffer.byteLength + 65535) >>> 16); // .grow() takes a delta compared to the previous size\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1 /*success*/;\n      } catch(e) {\n        console.error('emscripten_realloc_buffer: Attempted to grow heap from ' + buffer.byteLength  + ' bytes to ' + size + ' bytes, but got error: ' + e);\n      }\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\n      // anyhow)\n    }\n  function _emscripten_resize_heap(requestedSize) {\n      requestedSize = requestedSize >>> 0;\n      var oldSize = _emscripten_get_heap_size();\n      // With pthreads, races can happen (another thread might increase the size in between), so return a failure, and let the caller retry.\n      assert(requestedSize > oldSize);\n  \n      // Memory resize rules:\n      // 1. When resizing, always produce a resized heap that is at least 16MB (to avoid tiny heap sizes receiving lots of repeated resizes at startup)\n      // 2. Always increase heap size to at least the requested size, rounded up to next page multiple.\n      // 3a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap geometrically: increase the heap size according to \n      //                                         MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%),\n      //                                         At most overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n      // 3b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap linearly: increase the heap size by at least MEMORY_GROWTH_LINEAR_STEP bytes.\n      // 4. Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n      // 5. If we were unable to allocate as much memory, it may be due to over-eager decision to excessively reserve due to (3) above.\n      //    Hence if an allocation fails, cut down on the amount of excess growth, in an attempt to succeed to perform a smaller allocation.\n  \n      // A limit was set for how much we can grow. We should not exceed that\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n      var maxHeapSize = 2147483648;\n      if (requestedSize > maxHeapSize) {\n        err('Cannot enlarge memory, asked to go up to ' + requestedSize + ' bytes, but the limit is ' + maxHeapSize + ' bytes!');\n        return false;\n      }\n  \n      var minHeapSize = 16777216;\n  \n      // Loop through potential heap size increases. If we attempt a too eager reservation that fails, cut down on the\n      // attempted size and reserve a smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n      for(var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\n  \n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));\n  \n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n  \n          return true;\n        }\n      }\n      err('Failed to grow the heap from ' + oldSize + ' bytes to ' + newSize + ' bytes, not enough memory!');\n      return false;\n    }\n\n  function flush_NO_FILESYSTEM() {\n      // flush anything remaining in the buffers during shutdown\n      if (typeof _fflush !== 'undefined') _fflush(0);\n      var buffers = SYSCALLS.buffers;\n      if (buffers[1].length) SYSCALLS.printChar(1, 10);\n      if (buffers[2].length) SYSCALLS.printChar(2, 10);\n    }\n  \n  var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream, curr) {\n        var buffer = SYSCALLS.buffers[stream];\n        assert(buffer);\n        if (curr === 0 || curr === 10) {\n          (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n          buffer.length = 0;\n        } else {\n          buffer.push(curr);\n        }\n      },varargs:undefined,get:function() {\n        assert(SYSCALLS.varargs != undefined);\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },get64:function(low, high) {\n        if (low >= 0) assert(high === 0);\n        else assert(high === -1);\n        return low;\n      }};\n  function _fd_write(fd, iov, iovcnt, pnum) {\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAP32[(((iov)+(i*8))>>2)];\n        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n        for (var j = 0; j < len; j++) {\n          SYSCALLS.printChar(fd, HEAPU8[ptr+j]);\n        }\n        num += len;\n      }\n      HEAP32[((pnum)>>2)]=num\n      return 0;\n    }\n\n  function _setTempRet0($i) {\n      setTempRet0(($i) | 0);\n    }\nvar ASSERTIONS = true;\n\n\n\n/** @type {function(string, boolean=, number=)} */\nfunction intArrayFromString(stringy, dontAddNull, length) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xFF) {\n      if (ASSERTIONS) {\n        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\n      }\n      chr &= 0xFF;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join('');\n}\n\n\n\n__ATINIT__.push({ func: function() { ___wasm_call_ctors() } });\nvar asmLibraryArg = {\n  \"__cxa_atexit\": ___cxa_atexit,\n  \"abort\": _abort,\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\n  \"fd_write\": _fd_write,\n  \"memory\": wasmMemory,\n  \"setTempRet0\": _setTempRet0\n};\nvar asm = createWasm();\n/** @type {function(...*):?} */\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = createExportWrapper(\"__wasm_call_ctors\");\n\n/** @type {function(...*):?} */\nvar _initialize = Module[\"_initialize\"] = createExportWrapper(\"initialize\");\n\n/** @type {function(...*):?} */\nvar _foo = Module[\"_foo\"] = createExportWrapper(\"foo\");\n\n/** @type {function(...*):?} */\nvar ___errno_location = Module[\"___errno_location\"] = createExportWrapper(\"__errno_location\");\n\n/** @type {function(...*):?} */\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n\n/** @type {function(...*):?} */\nvar stackSave = Module[\"stackSave\"] = createExportWrapper(\"stackSave\");\n\n/** @type {function(...*):?} */\nvar stackRestore = Module[\"stackRestore\"] = createExportWrapper(\"stackRestore\");\n\n/** @type {function(...*):?} */\nvar stackAlloc = Module[\"stackAlloc\"] = createExportWrapper(\"stackAlloc\");\n\n/** @type {function(...*):?} */\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n\n\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\nif (!Object.getOwnPropertyDescriptor(Module, \"intArrayFromString\")) Module[\"intArrayFromString\"] = function() { abort(\"'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"intArrayToString\")) Module[\"intArrayToString\"] = function() { abort(\"'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"ccall\")) Module[\"ccall\"] = function() { abort(\"'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"cwrap\")) Module[\"cwrap\"] = function() { abort(\"'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"setValue\")) Module[\"setValue\"] = function() { abort(\"'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getValue\")) Module[\"getValue\"] = function() { abort(\"'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"allocate\")) Module[\"allocate\"] = function() { abort(\"'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF8ArrayToString\")) Module[\"UTF8ArrayToString\"] = function() { abort(\"'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF8ToString\")) Module[\"UTF8ToString\"] = function() { abort(\"'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF8Array\")) Module[\"stringToUTF8Array\"] = function() { abort(\"'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF8\")) Module[\"stringToUTF8\"] = function() { abort(\"'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF8\")) Module[\"lengthBytesUTF8\"] = function() { abort(\"'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stackTrace\")) Module[\"stackTrace\"] = function() { abort(\"'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnPreRun\")) Module[\"addOnPreRun\"] = function() { abort(\"'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnInit\")) Module[\"addOnInit\"] = function() { abort(\"'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnPreMain\")) Module[\"addOnPreMain\"] = function() { abort(\"'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnExit\")) Module[\"addOnExit\"] = function() { abort(\"'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnPostRun\")) Module[\"addOnPostRun\"] = function() { abort(\"'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeStringToMemory\")) Module[\"writeStringToMemory\"] = function() { abort(\"'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeArrayToMemory\")) Module[\"writeArrayToMemory\"] = function() { abort(\"'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeAsciiToMemory\")) Module[\"writeAsciiToMemory\"] = function() { abort(\"'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addRunDependency\")) Module[\"addRunDependency\"] = function() { abort(\"'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"removeRunDependency\")) Module[\"removeRunDependency\"] = function() { abort(\"'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createFolder\")) Module[\"FS_createFolder\"] = function() { abort(\"'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createPath\")) Module[\"FS_createPath\"] = function() { abort(\"'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createDataFile\")) Module[\"FS_createDataFile\"] = function() { abort(\"'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createPreloadedFile\")) Module[\"FS_createPreloadedFile\"] = function() { abort(\"'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createLazyFile\")) Module[\"FS_createLazyFile\"] = function() { abort(\"'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createLink\")) Module[\"FS_createLink\"] = function() { abort(\"'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createDevice\")) Module[\"FS_createDevice\"] = function() { abort(\"'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_unlink\")) Module[\"FS_unlink\"] = function() { abort(\"'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getLEB\")) Module[\"getLEB\"] = function() { abort(\"'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getFunctionTables\")) Module[\"getFunctionTables\"] = function() { abort(\"'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"alignFunctionTables\")) Module[\"alignFunctionTables\"] = function() { abort(\"'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"registerFunctions\")) Module[\"registerFunctions\"] = function() { abort(\"'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addFunction\")) Module[\"addFunction\"] = function() { abort(\"'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"removeFunction\")) Module[\"removeFunction\"] = function() { abort(\"'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getFuncWrapper\")) Module[\"getFuncWrapper\"] = function() { abort(\"'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"prettyPrint\")) Module[\"prettyPrint\"] = function() { abort(\"'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"makeBigInt\")) Module[\"makeBigInt\"] = function() { abort(\"'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"dynCall\")) Module[\"dynCall\"] = function() { abort(\"'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getCompilerSetting\")) Module[\"getCompilerSetting\"] = function() { abort(\"'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nModule[\"print\"] = out;\nif (!Object.getOwnPropertyDescriptor(Module, \"printErr\")) Module[\"printErr\"] = function() { abort(\"'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getTempRet0\")) Module[\"getTempRet0\"] = function() { abort(\"'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"setTempRet0\")) Module[\"setTempRet0\"] = function() { abort(\"'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"callMain\")) Module[\"callMain\"] = function() { abort(\"'callMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"abort\")) Module[\"abort\"] = function() { abort(\"'abort' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToNewUTF8\")) Module[\"stringToNewUTF8\"] = function() { abort(\"'stringToNewUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"emscripten_realloc_buffer\")) Module[\"emscripten_realloc_buffer\"] = function() { abort(\"'emscripten_realloc_buffer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"ENV\")) Module[\"ENV\"] = function() { abort(\"'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"ERRNO_CODES\")) Module[\"ERRNO_CODES\"] = function() { abort(\"'ERRNO_CODES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"ERRNO_MESSAGES\")) Module[\"ERRNO_MESSAGES\"] = function() { abort(\"'ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"setErrNo\")) Module[\"setErrNo\"] = function() { abort(\"'setErrNo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"DNS\")) Module[\"DNS\"] = function() { abort(\"'DNS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getHostByName\")) Module[\"getHostByName\"] = function() { abort(\"'getHostByName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"GAI_ERRNO_MESSAGES\")) Module[\"GAI_ERRNO_MESSAGES\"] = function() { abort(\"'GAI_ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"Protocols\")) Module[\"Protocols\"] = function() { abort(\"'Protocols' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"Sockets\")) Module[\"Sockets\"] = function() { abort(\"'Sockets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getRandomDevice\")) Module[\"getRandomDevice\"] = function() { abort(\"'getRandomDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"traverseStack\")) Module[\"traverseStack\"] = function() { abort(\"'traverseStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"UNWIND_CACHE\")) Module[\"UNWIND_CACHE\"] = function() { abort(\"'UNWIND_CACHE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"withBuiltinMalloc\")) Module[\"withBuiltinMalloc\"] = function() { abort(\"'withBuiltinMalloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"readAsmConstArgsArray\")) Module[\"readAsmConstArgsArray\"] = function() { abort(\"'readAsmConstArgsArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"readAsmConstArgs\")) Module[\"readAsmConstArgs\"] = function() { abort(\"'readAsmConstArgs' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"mainThreadEM_ASM\")) Module[\"mainThreadEM_ASM\"] = function() { abort(\"'mainThreadEM_ASM' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"jstoi_q\")) Module[\"jstoi_q\"] = function() { abort(\"'jstoi_q' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"jstoi_s\")) Module[\"jstoi_s\"] = function() { abort(\"'jstoi_s' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getExecutableName\")) Module[\"getExecutableName\"] = function() { abort(\"'getExecutableName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"listenOnce\")) Module[\"listenOnce\"] = function() { abort(\"'listenOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"autoResumeAudioContext\")) Module[\"autoResumeAudioContext\"] = function() { abort(\"'autoResumeAudioContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"dynCallLegacy\")) Module[\"dynCallLegacy\"] = function() { abort(\"'dynCallLegacy' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getDynCaller\")) Module[\"getDynCaller\"] = function() { abort(\"'getDynCaller' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"dynCall\")) Module[\"dynCall\"] = function() { abort(\"'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"callRuntimeCallbacks\")) Module[\"callRuntimeCallbacks\"] = function() { abort(\"'callRuntimeCallbacks' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"abortStackOverflow\")) Module[\"abortStackOverflow\"] = function() { abort(\"'abortStackOverflow' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"reallyNegative\")) Module[\"reallyNegative\"] = function() { abort(\"'reallyNegative' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"unSign\")) Module[\"unSign\"] = function() { abort(\"'unSign' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"reSign\")) Module[\"reSign\"] = function() { abort(\"'reSign' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"formatString\")) Module[\"formatString\"] = function() { abort(\"'formatString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"PATH\")) Module[\"PATH\"] = function() { abort(\"'PATH' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"PATH_FS\")) Module[\"PATH_FS\"] = function() { abort(\"'PATH_FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"SYSCALLS\")) Module[\"SYSCALLS\"] = function() { abort(\"'SYSCALLS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"syscallMmap2\")) Module[\"syscallMmap2\"] = function() { abort(\"'syscallMmap2' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"syscallMunmap\")) Module[\"syscallMunmap\"] = function() { abort(\"'syscallMunmap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"flush_NO_FILESYSTEM\")) Module[\"flush_NO_FILESYSTEM\"] = function() { abort(\"'flush_NO_FILESYSTEM' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"JSEvents\")) Module[\"JSEvents\"] = function() { abort(\"'JSEvents' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"specialHTMLTargets\")) Module[\"specialHTMLTargets\"] = function() { abort(\"'specialHTMLTargets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"maybeCStringToJsString\")) Module[\"maybeCStringToJsString\"] = function() { abort(\"'maybeCStringToJsString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"findEventTarget\")) Module[\"findEventTarget\"] = function() { abort(\"'findEventTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"findCanvasEventTarget\")) Module[\"findCanvasEventTarget\"] = function() { abort(\"'findCanvasEventTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"polyfillSetImmediate\")) Module[\"polyfillSetImmediate\"] = function() { abort(\"'polyfillSetImmediate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"demangle\")) Module[\"demangle\"] = function() { abort(\"'demangle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"demangleAll\")) Module[\"demangleAll\"] = function() { abort(\"'demangleAll' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"jsStackTrace\")) Module[\"jsStackTrace\"] = function() { abort(\"'jsStackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stackTrace\")) Module[\"stackTrace\"] = function() { abort(\"'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getEnvStrings\")) Module[\"getEnvStrings\"] = function() { abort(\"'getEnvStrings' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"checkWasiClock\")) Module[\"checkWasiClock\"] = function() { abort(\"'checkWasiClock' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToI64\")) Module[\"writeI53ToI64\"] = function() { abort(\"'writeI53ToI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToI64Clamped\")) Module[\"writeI53ToI64Clamped\"] = function() { abort(\"'writeI53ToI64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToI64Signaling\")) Module[\"writeI53ToI64Signaling\"] = function() { abort(\"'writeI53ToI64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToU64Clamped\")) Module[\"writeI53ToU64Clamped\"] = function() { abort(\"'writeI53ToU64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToU64Signaling\")) Module[\"writeI53ToU64Signaling\"] = function() { abort(\"'writeI53ToU64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"readI53FromI64\")) Module[\"readI53FromI64\"] = function() { abort(\"'readI53FromI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"readI53FromU64\")) Module[\"readI53FromU64\"] = function() { abort(\"'readI53FromU64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"convertI32PairToI53\")) Module[\"convertI32PairToI53\"] = function() { abort(\"'convertI32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"convertU32PairToI53\")) Module[\"convertU32PairToI53\"] = function() { abort(\"'convertU32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"exceptionLast\")) Module[\"exceptionLast\"] = function() { abort(\"'exceptionLast' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"exceptionCaught\")) Module[\"exceptionCaught\"] = function() { abort(\"'exceptionCaught' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"ExceptionInfoAttrs\")) Module[\"ExceptionInfoAttrs\"] = function() { abort(\"'ExceptionInfoAttrs' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"ExceptionInfo\")) Module[\"ExceptionInfo\"] = function() { abort(\"'ExceptionInfo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"CatchInfo\")) Module[\"CatchInfo\"] = function() { abort(\"'CatchInfo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"exception_addRef\")) Module[\"exception_addRef\"] = function() { abort(\"'exception_addRef' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"exception_decRef\")) Module[\"exception_decRef\"] = function() { abort(\"'exception_decRef' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"Browser\")) Module[\"Browser\"] = function() { abort(\"'Browser' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"funcWrappers\")) Module[\"funcWrappers\"] = function() { abort(\"'funcWrappers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getFuncWrapper\")) Module[\"getFuncWrapper\"] = function() { abort(\"'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"setMainLoop\")) Module[\"setMainLoop\"] = function() { abort(\"'setMainLoop' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS\")) Module[\"FS\"] = function() { abort(\"'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"mmapAlloc\")) Module[\"mmapAlloc\"] = function() { abort(\"'mmapAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"MEMFS\")) Module[\"MEMFS\"] = function() { abort(\"'MEMFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"TTY\")) Module[\"TTY\"] = function() { abort(\"'TTY' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"PIPEFS\")) Module[\"PIPEFS\"] = function() { abort(\"'PIPEFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"SOCKFS\")) Module[\"SOCKFS\"] = function() { abort(\"'SOCKFS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"tempFixedLengthArray\")) Module[\"tempFixedLengthArray\"] = function() { abort(\"'tempFixedLengthArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"miniTempWebGLFloatBuffers\")) Module[\"miniTempWebGLFloatBuffers\"] = function() { abort(\"'miniTempWebGLFloatBuffers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"heapObjectForWebGLType\")) Module[\"heapObjectForWebGLType\"] = function() { abort(\"'heapObjectForWebGLType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"heapAccessShiftForWebGLHeap\")) Module[\"heapAccessShiftForWebGLHeap\"] = function() { abort(\"'heapAccessShiftForWebGLHeap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"GL\")) Module[\"GL\"] = function() { abort(\"'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGet\")) Module[\"emscriptenWebGLGet\"] = function() { abort(\"'emscriptenWebGLGet' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"computeUnpackAlignedImageSize\")) Module[\"computeUnpackAlignedImageSize\"] = function() { abort(\"'computeUnpackAlignedImageSize' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGetTexPixelData\")) Module[\"emscriptenWebGLGetTexPixelData\"] = function() { abort(\"'emscriptenWebGLGetTexPixelData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGetUniform\")) Module[\"emscriptenWebGLGetUniform\"] = function() { abort(\"'emscriptenWebGLGetUniform' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGetVertexAttrib\")) Module[\"emscriptenWebGLGetVertexAttrib\"] = function() { abort(\"'emscriptenWebGLGetVertexAttrib' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeGLArray\")) Module[\"writeGLArray\"] = function() { abort(\"'writeGLArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"AL\")) Module[\"AL\"] = function() { abort(\"'AL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"SDL_unicode\")) Module[\"SDL_unicode\"] = function() { abort(\"'SDL_unicode' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"SDL_ttfContext\")) Module[\"SDL_ttfContext\"] = function() { abort(\"'SDL_ttfContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"SDL_audio\")) Module[\"SDL_audio\"] = function() { abort(\"'SDL_audio' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"SDL\")) Module[\"SDL\"] = function() { abort(\"'SDL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"SDL_gfx\")) Module[\"SDL_gfx\"] = function() { abort(\"'SDL_gfx' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"GLUT\")) Module[\"GLUT\"] = function() { abort(\"'GLUT' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"EGL\")) Module[\"EGL\"] = function() { abort(\"'EGL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"GLFW_Window\")) Module[\"GLFW_Window\"] = function() { abort(\"'GLFW_Window' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"GLFW\")) Module[\"GLFW\"] = function() { abort(\"'GLFW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"GLEW\")) Module[\"GLEW\"] = function() { abort(\"'GLEW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"IDBStore\")) Module[\"IDBStore\"] = function() { abort(\"'IDBStore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"runAndAbortIfError\")) Module[\"runAndAbortIfError\"] = function() { abort(\"'runAndAbortIfError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"warnOnce\")) Module[\"warnOnce\"] = function() { abort(\"'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stackSave\")) Module[\"stackSave\"] = function() { abort(\"'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stackRestore\")) Module[\"stackRestore\"] = function() { abort(\"'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stackAlloc\")) Module[\"stackAlloc\"] = function() { abort(\"'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"AsciiToString\")) Module[\"AsciiToString\"] = function() { abort(\"'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToAscii\")) Module[\"stringToAscii\"] = function() { abort(\"'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF16ToString\")) Module[\"UTF16ToString\"] = function() { abort(\"'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF16\")) Module[\"stringToUTF16\"] = function() { abort(\"'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF16\")) Module[\"lengthBytesUTF16\"] = function() { abort(\"'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF32ToString\")) Module[\"UTF32ToString\"] = function() { abort(\"'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF32\")) Module[\"stringToUTF32\"] = function() { abort(\"'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF32\")) Module[\"lengthBytesUTF32\"] = function() { abort(\"'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"allocateUTF8\")) Module[\"allocateUTF8\"] = function() { abort(\"'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"allocateUTF8OnStack\")) Module[\"allocateUTF8OnStack\"] = function() { abort(\"'allocateUTF8OnStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nModule[\"writeStackCookie\"] = writeStackCookie;\nModule[\"checkStackCookie\"] = checkStackCookie;\nif (!Object.getOwnPropertyDescriptor(Module, \"ALLOC_NORMAL\")) Object.defineProperty(Module, \"ALLOC_NORMAL\", { configurable: true, get: function() { abort(\"'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Object.getOwnPropertyDescriptor(Module, \"ALLOC_STACK\")) Object.defineProperty(Module, \"ALLOC_STACK\", { configurable: true, get: function() { abort(\"'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\n\nvar calledRun;\n\n/**\n * @constructor\n * @this {ExitStatus}\n */\nfunction ExitStatus(status) {\n  this.name = \"ExitStatus\";\n  this.message = \"Program terminated with exit(\" + status + \")\";\n  this.status = status;\n}\n\nvar calledMain = false;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || arguments_;\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n  writeStackCookie();\n\n  preRun();\n\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    readyPromiseResolve(Module);\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n  checkStackCookie();\n}\nModule['run'] = run;\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var print = out;\n  var printErr = err;\n  var has = false;\n  out = err = function(x) {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    var flush = flush_NO_FILESYSTEM;\n    if (flush) flush();\n  } catch(e) {}\n  out = print;\n  err = printErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -s FORCE_FILESYSTEM=1)');\n  }\n}\n\n/** @param {boolean|number=} implicit */\nfunction exit(status, implicit) {\n  checkUnflushedContent();\n\n  // if this is just main exit-ing implicitly, and the status is 0, then we\n  // don't need to do anything here and can just leave. if the status is\n  // non-zero, though, then we need to report it.\n  // (we may have warned about this earlier, if a situation justifies doing so)\n  if (implicit && noExitRuntime && status === 0) {\n    return;\n  }\n\n  if (noExitRuntime) {\n    // if exit() was called, we may warn the user if the runtime isn't actually being shut down\n    if (!implicit) {\n      var msg = 'program exited (with status: ' + status + '), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)';\n      readyPromiseReject(msg);\n      err(msg);\n    }\n  } else {\n\n    EXITSTATUS = status;\n\n    exitRuntime();\n\n    if (Module['onExit']) Module['onExit'](status);\n\n    ABORT = true;\n  }\n\n  quit_(status, new ExitStatus(status));\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n  noExitRuntime = true;\n\nrun();\n\n\n\n\n\n\n\n  return Module.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = Module;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return Module; });\n    else if (typeof exports === 'object')\n      exports[\"Module\"] = Module;\n    ","\nimport Foo from \"./foo\";\n\n\ninterface State {\n    computing: boolean;\n    mem: WebAssembly.Memory|null;\n    checkpoint: ArrayBuffer|null;\n}\n\nenum Checkpoint {No, Save};\n\nclass C {\n    #boxy: HTMLElement;\n    #reload_button: HTMLButtonElement;\n\n    #state: State;\n    \n    constructor(boxy: HTMLElement, reload_button: HTMLButtonElement) {\n        this.#boxy = boxy;\n        this.#reload_button = reload_button;\n        this.#state = {computing: false, mem: null, checkpoint: null};\n        reload_button.addEventListener(\"click\", (_event) => this.Refresh());\n    }\n\n    get state(): State { return this.#state; }\n\n    static sleep = (timeout: number) => new Promise<void>((resolve) => window.setTimeout(resolve, timeout));\n\n    static MemoryDescriptor = (prevBytes?:number): [WebAssembly.MemoryDescriptor, number] => {\n        const WASM_PAGE_SIZE = 65536;\n        const TOTAL_STACK = 5242880; // this seems hardcoded in Emscripten\n        let initialMem = 10 + (TOTAL_STACK / WASM_PAGE_SIZE); // this should match c/Makefile\n        const maximumMem = 2 * initialMem;\n        if (prevBytes !== undefined && prevBytes / WASM_PAGE_SIZE > initialMem)\n            initialMem = prevBytes / WASM_PAGE_SIZE;\n        return [{initial: initialMem, maximum: maximumMem},  initialMem * WASM_PAGE_SIZE];\n    }\n\n    MakeModuleIn = <T extends Foo.InputModule>(t: T): T&Foo.ModulePrint => {\n        const print = (...data: any[]) => {\n            this.Put (document.createElement('br'), 'stdout> ');\n            data.forEach((v) => {\n                this.Put (v);\n            });\n        };\n        \n        const u = {...t, print: print};\n        return u;\n    }\n\n    Compute = async (foo: Foo.Module & Foo.FooItf, checkpoint: Checkpoint) => {\n        await this.WithComputing (async () => {\n            foo._initialize();\n            if (checkpoint === Checkpoint.Save)\n                this.SaveCheckPoint ();\n            for (let i = 0; i < 50; ++i) {\n                await C.sleep (50);\n                const n = foo._foo ();\n                this.Put (document.createElement('br'), `iter i = ${i} n = ${n}`);\n            }\n            this.Put (document.createElement(\"br\"));\n            this.Put (`memory has ${this.state.mem!.buffer.byteLength} bytes`);\n        }); \n    }\n\n    WithComputing = async (f: () => Promise<void>) => {\n        this.state.computing = true;\n        this.#reload_button.disabled = true;\n        await f();\n        this.#reload_button.disabled = false;\n        this.state.computing = false;\n    }\n\n    SaveCheckPoint = () => {\n        const buffer = this.state.mem!.buffer;\n        this.state.checkpoint = null; /* drop the old checkpoint, if any */\n        const checkpoint = new ArrayBuffer(buffer.byteLength);\n        C.CopyBuffer ({from: buffer, to: checkpoint});\n        this.state.checkpoint = checkpoint;\n    }\n \n    static CopyBuffer(arg: {from: ArrayBuffer, to: ArrayBuffer}) {\n        const src = new Uint8Array(arg.from);\n        const dest = new Uint8Array(arg.to);\n        dest.set(src);\n    }\n\n    /**\n     * Initialize the WebAssembly instance for Emscripten module `Foo`\n     * \n     * @param oldBuffer if it is not `undefined`, copy its contents over\n     * the memory of the WASM instance after it is instantiated.\n     *\n     * The initial memory size is the maximum of the hardcoded initial size and\n     * the actual size of `oldBuffer`.\n     */\n    Reinit = async (oldBuffer?: ArrayBuffer): Promise<Foo.Module & Foo.FooItf> => {\n        this.state.mem = null;\n        const [memoryDescriptor, initialMemory] = C.MemoryDescriptor(oldBuffer?.byteLength);\n        const newMem = new WebAssembly.Memory(memoryDescriptor);\n        const moduleIn = this.MakeModuleIn ({\"wasmMemory\": newMem, \"INITIAL_MEMORY\": initialMemory});\n        this.state.mem = newMem;\n        const foo = await Foo (moduleIn);\n        if (oldBuffer !== undefined)\n            C.CopyBuffer({from: oldBuffer, to: newMem.buffer});\n        oldBuffer = undefined;\n        return foo;\n    }\n\n    FirstRun = async () => {\n        this.Put ('First run');\n        const foo = await this.Reinit();\n        await this.Compute(foo, Checkpoint.Save);\n    }\n\n    Refresh = async () => {\n        if (this.state.computing)\n            return;\n        this.#boxy.innerHTML = \"Restarted<br>\";\n        const foo = await this.Reinit (this.state.checkpoint!);\n        await this.Compute (foo, Checkpoint.No);\n    }\n\n    Put = (...content: (string | Node)[]) => {\n        this.#boxy.append(...content);\n    }\n\n    _dumpObject = (foo: object, name?: string) => {\n        name = (name === undefined) ? \"foo\" : name;\n        this.Put (document.createElement(\"hr\"));\n        Object.keys(foo).forEach((k, _idx, _arr) => {\n            this.Put (`${name}.${k}`, document.createElement(\"br\"));\n        })\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', (_event) => {\n    const c = new C(document.getElementById('boxy')!,\n                    document.getElementById(\"reload\")! as HTMLButtonElement);\n    c.FirstRun().catch((e)=> console.log (`error: ${e}`));    \n});\n"]}